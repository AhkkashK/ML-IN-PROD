name: CI/CD Pipeline

permissions:
  contents: write

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  integration-tests:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose version  # Verify docker-compose is installed
      - name: Run integration tests
        run: |
          docker-compose run --rm backend pytest /tests/integration_test.py
      - name: Merge develop into staging
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout staging
          git merge origin/develop --no-ff --commit -m "CI: Merge develop into staging after integration tests"
          git push origin staging
  
  
  staging-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: ${{ always() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose version

      - name: Install dependencies
        run: npm install cypress 

      - name: Install GPU dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libnss3 x11-utils

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
      - name: Wait for backend to be ready
        run: |
          npx wait-on http://localhost:3000

      - name: List Cypress Files
        run: |
          echo "Listing all files in the Cypress directory:"
          ls -R tests/cypress

      - name: Run Cypress end-to-end tests
        uses: cypress-io/github-action@v5
        with:
          spec: tests/cypress/e2e/**/*.cy.js 
          config-file: tests/cypress.config.js
          browser: chrome

      - name: Stop services
        if: always()
        run: |
          docker-compose down
      
      - name: Merge staging into main
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout main
          git merge origin/staging --no-ff --commit -m "CI: Merge staging into main after unit and E2E tests"
          git push origin main
    
  deploy-to-dockerhub:
   runs-on: ubuntu-latest
   needs: staging-tests
   if: always()

   steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        docker-compose version
    
    - name: Build services with Docker Compose
      run: |
        docker-compose build

