name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - staging
      - production

jobs:
  integration-tests:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build backend
          docker-compose -f docker-compose.yml build frontend

      - name: Run backend tests
        run: |
          docker-compose run --rm backend pytest tests/integration_test.py

  staging-tests:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Start Services
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services to be ready
        run: |
          npx wait-on http://localhost:3000 http://localhost:8000

      - name: Run backend unit tests
        run: |
          docker-compose run --rm backend pytest tests/unit_test.py

      - name: Run Cypress end-to-end tests
        run: |
          docker-compose run --rm frontend npx cypress run

      - name: Stop services
        if: always()
        run: |
          docker-compose down

  build-and-deploy:
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Push Docker images to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag backend ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
          docker tag frontend ${{ secrets.DOCKER_USERNAME }}/my-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend:latest
