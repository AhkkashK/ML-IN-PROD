name: CI/CD Pipeline

permissions:
  contents: write

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - staging
      - main

jobs:
  integration-tests:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: ubuntu-latest

    steps:
      - name: Debug info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Ref: ${{ github.ref }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose version

      - name: Run integration tests
        run: |
          docker-compose run --rm backend pytest /tests/integration_test.py

  staging-tests:
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: Debug info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose version

      - name: Install dependencies
        run: npm install cypress 

      - name: Install GPU dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libnss3 x11-utils

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d

      - name: Run Cypress end-to-end tests
        uses: cypress-io/github-action@v5
        with:
          spec: tests/cypress/e2e/**/*.cy.js 
          config-file: tests/cypress.config.js
          browser: chrome

      - name: Stop services
        if: always()
        run: docker-compose down

  deploy-to-dockerhub:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Debug info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose version
    
      - name: Build services with Docker Compose
        run: |
          docker-compose build

      - name: Push images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/classification-spam:backend-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/classification-spam:frontend-latest
